definitions:
  skills.CreateSkillCategoryRequest:
    properties:
      name:
        items:
          type: string
        type: array
    required:
    - name
    type: object
  skills.SkillCategoryUpdateRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  skills.SkillRequest:
    properties:
      icon:
        type: string
      name:
        type: string
      skill_category_id:
        type: integer
    type: object
  skills.UserSkillRequest:
    properties:
      skill_level:
        type: string
      skillData:
        $ref: '#/definitions/skills.SkillRequest'
      user_id:
        type: integer
    type: object
  user.AddUserEducation:
    properties:
      achievements:
        type: string
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      institution_name:
        type: string
      start_date:
        type: string
      user_id:
        type: integer
    required:
    - end_date
    - institution_name
    - start_date
    - user_id
    type: object
  user.CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      job_title:
        type: string
      last_name:
        type: string
      mobile_number:
        type: string
      user_category_id:
        type: integer
    required:
    - email
    - first_name
    - last_name
    type: object
  user.UpdateUser:
    properties:
      bio:
        type: string
      certifications:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      location:
        type: string
      mobile_number:
        type: string
      user_category_id:
        type: integer
      video_url:
        type: string
    type: object
  user.UpdateUserEducation:
    properties:
      achievements:
        type: string
      degree:
        type: string
      end_date:
        type: string
      field_of_study:
        type: string
      institution_name:
        type: string
      start_date:
        type: string
    required:
    - institution_name
    - start_date
    type: object
  utils.ResponseMessage:
    properties:
      data: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
info:
  contact: {}
paths:
  /skills:
    get:
      consumes:
      - application/json
      description: Get all skills
      operationId: Get-skills
      parameters:
      - description: example - 50
        in: query
        name: limit
        type: integer
      - description: example - 0
        in: query
        name: offset
        type: integer
      - description: example - created_at desc,updated_at desc
        in: query
        name: orderBy
        type: string
      - description: Search for a keyword in skill names
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Get all skills
      tags:
      - Skills
    post:
      consumes:
      - application/json
      description: Create skills
      operationId: Create-skills
      parameters:
      - description: Skill
        in: body
        name: UserSkillRequest
        required: true
        schema:
          $ref: '#/definitions/skills.UserSkillRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
      security:
      - ApiAuthKey: []
      summary: Create skills
      tags:
      - Skills
  /skills/{id}:
    delete:
      consumes:
      - application/json
      description: Delete skill
      operationId: delete-skill
      parameters:
      - description: Skill ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Delete skill
      tags:
      - Skills
    get:
      consumes:
      - application/json
      description: Get skill
      operationId: get-skill
      parameters:
      - description: Skill ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Get skill
      tags:
      - Skills
    patch:
      consumes:
      - application/json
      description: Update skill
      operationId: update-skill
      parameters:
      - description: Skill ID
        in: path
        name: id
        required: true
        type: integer
      - description: Skill
        in: body
        name: SkillRequest
        required: true
        schema:
          $ref: '#/definitions/skills.SkillRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Update skill
      tags:
      - Skills
  /skills/categories:
    get:
      consumes:
      - application/json
      description: Get all skill Categories
      operationId: Get-skill-categories
      parameters:
      - description: example - 50
        in: query
        name: limit
        type: integer
      - description: example - 0
        in: query
        name: offset
        type: integer
      - description: example - created_at desc,updated_at desc
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Get all skill Categories
      tags:
      - Skills Categories
    post:
      consumes:
      - application/json
      description: Create skill Categories
      operationId: Create-skill-categories
      parameters:
      - description: Skills Categories
        in: body
        name: CreateSkillCategoryRequest
        required: true
        schema:
          $ref: '#/definitions/skills.CreateSkillCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
      security:
      - ApiAuthKey: []
      summary: Create skill Categories
      tags:
      - Skills Categories
  /skills/categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete skill category
      operationId: delete-skill-category
      parameters:
      - description: Skill Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Delete skill category
      tags:
      - Skills Categories
    get:
      consumes:
      - application/json
      description: Get skill category
      operationId: get-skill-category
      parameters:
      - description: Skill Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Get skill category
      tags:
      - Skills Categories
    patch:
      consumes:
      - application/json
      description: Update skill category
      operationId: update-skill-category
      parameters:
      - description: Skill Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Skills Categories
        in: body
        name: SkillCategoryUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/skills.SkillCategoryUpdateRequest'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiAuthKey: []
      summary: Update skill category
      tags:
      - Skills Categories
  /user/add-user-education:
    post:
      consumes:
      - application/json
      description: add user education
      operationId: add-user-education
      parameters:
      - description: AddUserEducation
        in: body
        name: AddUserEducation
        required: true
        schema:
          $ref: '#/definitions/user.AddUserEducation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: add user education
      tags:
      - user
  /user/create-user:
    post:
      consumes:
      - application/json
      description: creates a new complete user
      operationId: create-user
      parameters:
      - description: CreateUserRequest
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseMessage'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create user
      tags:
      - user
  /user/delete-user-education/{id}:
    delete:
      consumes:
      - application/json
      description: delete user education by user id
      operationId: delete-user-education-by-user-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete user education by user id
      tags:
      - user
  /user/delete-user{id}:
    delete:
      consumes:
      - application/json
      description: delete user by id
      operationId: delete-user-by-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete user by id
      tags:
      - user
  /user/get-all-user-education/{id}:
    get:
      consumes:
      - application/json
      description: get all user education
      operationId: get-all-user-education
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: example - 50
        in: query
        name: limit
        type: integer
      - description: example - 0
        in: query
        name: offset
        type: integer
      - description: example - created_at desc
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all user education
      tags:
      - user
  /user/get-all-user-list:
    get:
      consumes:
      - application/json
      description: get all user
      operationId: get-all-user
      parameters:
      - description: example - 50
        in: query
        name: limit
        type: integer
      - description: example - 0
        in: query
        name: offset
        type: integer
      - description: example - created_at desc
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all user
      tags:
      - user
  /user/get-user-details/{id}:
    get:
      consumes:
      - application/json
      description: get user details by id
      operationId: get-user-details-by-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user details by id
      tags:
      - user
  /user/get-user-education/{id}:
    get:
      consumes:
      - application/json
      description: get user education details by user id
      operationId: get-user-education-details-by-user-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get user education details by user id
      tags:
      - user
  /user/update-user-education/{id}:
    patch:
      consumes:
      - application/json
      description: Update user education
      operationId: update-user-education
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: userId
        in: query
        name: userId
        required: true
        type: integer
      - description: UpdateUserEducation
        in: body
        name: UpdateUserEducation
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserEducation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update user education
      tags:
      - user
  /user/update-user/{id}:
    patch:
      consumes:
      - application/json
      description: Updates user
      operationId: update-user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: UpdateUser
        in: body
        name: UpdateUser
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update user
      tags:
      - user
swagger: "2.0"
